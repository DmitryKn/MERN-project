{"version":3,"sources":["Shared/Components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Shared/Util/validators.js","Shared/Components/FromElements/Input.js","Shared/Hooks/Form-hooks.js","Places/Pages/UpdatePlace.js"],"names":["Card","props","className","style","children","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onBlur","onChange","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","title","description","inputHandler","setFormData","a","process","responseData","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","Authorization","token","push","userId","Fragment","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/6.a1f48fd9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        \"form-control--invalid\"}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Input from \"../../Shared/Components/FromElements/Input\";\r\nimport Button from \"../../Shared/Components/FromElements/Button\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from \"../../Shared/Util/validators\";\r\nimport { useForm } from \"../../Shared/Hooks/Form-hooks\";\r\nimport { useHttpClient } from \"../../Shared/Hooks/http-hook\";\r\nimport { AuthContext } from \"../../Shared/Context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const fetchPlace = async () => {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n      };\r\n      fetchPlace();\r\n    } catch (error) {}\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\"); //redirection to user places page\r\n    } catch (error) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"],"sourceRoot":""}