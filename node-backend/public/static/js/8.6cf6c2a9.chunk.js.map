{"version":3,"sources":["Shared/Components/UIElements/Card.js","Shared/Components/UIElements/Avatar.js","Users/Components/UserItem.js","Users/Components/UsersList.js","Users/Pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","id","name","placeCount","to","process","UsersList","items","length","map","user","key","places","Users","useState","loadedUsers","setLoadUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,gLCSEC,G,YAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,eCmBpCE,EAvBE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,KAAMN,EAAwB,EAAxBA,MAAOO,EAAiB,EAAjBA,WACnC,OACE,wBAAIZ,UAAU,aACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACd,kBAAC,IAAD,CAAMa,GAAE,WAAMH,EAAN,YACN,yBAAKV,UAAU,oBACb,kBAAC,EAAD,CACEK,MAAK,UAAKS,oCAAL,YAAwCT,GAC7CM,KAAMA,KAGV,yBAAKX,UAAU,mBACb,4BAAKW,GACL,4BACGC,EADH,IAC+B,IAAfA,EAAmB,QAAU,eCW1CG,G,MAzBG,SAAAhB,GAChB,OAA2B,IAAvBA,EAAMiB,MAAMC,OAEZ,yBAAKjB,UAAU,UACb,kBAACF,EAAA,EAAD,KACE,gDAMN,wBAAIE,UAAU,cACXD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAKT,GACVA,GAAIS,EAAKT,GACTL,MAAOc,EAAKd,MACZM,KAAMQ,EAAKR,KACXC,WAAYO,EAAKE,OAAOJ,e,wBCcnBK,UAhCD,WAAO,IAAD,EACkBC,qBADlB,mBACXC,EADW,KACEC,EADF,OAEoCC,cAA9CC,EAFU,EAEVA,UAAWC,EAFD,EAECA,MAAOC,EAFR,EAEQA,YAAaC,EAFrB,EAEqBA,WAiBvC,OAfAC,qBAAU,YAGQ,uCAAG,4BAAAC,EAAA,+EAEYH,EACzBf,gDAHa,OAETmB,EAFS,OAMfR,EAAaQ,EAAaC,OANX,uGAAH,qDAShBC,KACC,CAACN,IAGF,kBAAC,IAAMO,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYT,MAAOA,EAAOU,QAASR,IAClCH,GACC,yBAAK3B,UAAU,UACb,kBAACuC,EAAA,EAAD,QAGFZ,GAAaH,GAAe,kBAAC,EAAD,CAAUR,MAAOQ","file":"static/js/8.6cf6c2a9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../Shared/Components/UIElements/Avatar\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserItem = ({ id, name, image, placeCount }) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${image}`}\r\n              name={name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{name}</h2>\r\n            <h3>\r\n              {placeCount} {placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport \"./UsersList.css\";\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserList from \"../Components/UsersList\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../Shared/Hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const [loadedUsers, setLoadUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    // can't ASYNC()=>{} up there\r\n    // create self invoked function\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/\"\r\n        );\r\n\r\n        setLoadUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers(); //invoke\r\n  }, [sendRequest]); //sendRequest is a dependancy for update state\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}