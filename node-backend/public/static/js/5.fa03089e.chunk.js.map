{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Shared/Util/validators.js","Shared/Components/FromElements/Input.js","Shared/Hooks/Form-hooks.js","Shared/Components/FromElements/ImageUpload.js","Places/Pages/NewPlace.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onBlur","onChange","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.fa03089e.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        \"form-control--invalid\"}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"../FromElements/Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../Shared/Components/FromElements/Input\";\r\nimport Button from \"../../Shared/Components/FromElements/Button\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../Shared/Components/FromElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from \"../../Shared/Util/validators\";\r\nimport { useForm } from \"../../Shared/Hooks/Form-hooks\";\r\nimport { useHttpClient } from \"../../Shared/Hooks/http-hook\";\r\nimport { AuthContext } from \"../../Shared/Context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory(); //for user redirection\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token\r\n        }\r\n      );\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]} //checking if the input not an empty\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]} //checking if the input not an empty\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]} //checking if the input not an empty\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}