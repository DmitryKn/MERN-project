{"version":3,"sources":["Shared/Components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Shared/Util/validators.js","Shared/Components/FromElements/Input.js","Shared/Hooks/Form-hooks.js","Shared/Components/FromElements/ImageUpload.js","Users/Pages/Auth.js"],"names":["Card","props","className","style","children","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onBlur","onChange","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.3b74246d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        \"form-control--invalid\"}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"../FromElements/Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Input from \"../../Shared/Components/FromElements/Input\";\r\nimport Button from \"../../Shared/Components/FromElements/Button\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport ImageUpload from \"../../Shared/Components/FromElements/ImageUpload\";\r\nimport { useForm } from \"../../Shared/Hooks/Form-hooks\";\r\nimport { AuthContext } from \"../../Shared/Context/auth-context\";\r\nimport { useHttpClient } from \"../../Shared/Hooks/http-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_REQUIRE\r\n} from \"../../Shared/Util/validators\";\r\n\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    //if signup form, without name input button will be disabled\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined //if we switch from signup to signin. Preview = undef\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData(); //browser API for binary data\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData //sending collected data to server, instead of json\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && ( //if we in signup mode\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}